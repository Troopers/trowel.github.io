{"version":3,"sources":["webpack:///webpack/bootstrap 708030de537cc7077c02","webpack:///./scripts/components/affix.js","webpack:///./scripts/components/menu.js","webpack:///./~/trowel-alerts/src/javascript/alerts.js","webpack:///./~/trowel-breadcrumbs/src/javascript/breadcrumbs.js","webpack:///./~/trowel-collapses/src/javascript/collapses.js","webpack:///./~/trowel-drops/src/javascript/drops.js","webpack:///./~/trowel-modals/src/javascript/modals.js","webpack:///./scripts/main.js"],"names":["Affix","contentWrapper","document","getElementById","getAttribute","print","listener","nav","createElement","classList","add","id","headings","map","anchor","innerText","heading","setAttribute","append","before","event","target","header","subHeader","scrollTop","offsetTop","offsetHeight","body","documentElement","anchors","addEventListener","goTo","bind","slice","call","querySelectorAll","Menus","elements","forEach","element","index","element_obj","Menu","querySelector","navToggle","backdrop","movingDom","triggerDom","navPart","toggle","menus","affix","breadcrumbs","alerts","dropsTrigger","collapses","modals"],"mappings":"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AAWmC,QAAQlB,gBAAR,CAAyB,OAAzB,EAAkC,MAAKmB,MAAL,CAAYjB,IAAZ,OAAlC,CAAX;AAAA,OAApB,CAAP;AACD;;;;;;kBAGYI,K;;;;;;;;;AC9Bf;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gEAAgE,eAAe;;AAE/E;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oFAAoF,iBAAiB;;AAErG;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA;;;;;;;;;ACpLA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AAAA;AAAA;;AAEA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4CAA4C,OAAO;AACnD,4DAA4D,OAAO;;AAEnE;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK,IAAI;;AAET,WAAW,aAAa;;AAExB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,YAAY,GAAG,YAAY;AAChD,2BAA2B,kBAAkB,GAAG,kBAAkB;AAClE;;;AAGA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,QAAQ,GAAG,QAAQ;AAChE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;;AAEA;;;;;;;;;AC5OA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qGAAqG,gBAAgB;;AAErH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;AC1EA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMc,QAAQ,mBAAUhD,SAASiC,gBAAT,CAA0B,oBAA1B,CAAV,CAAd;AACA,IAAMgB,QAAQ,qBAAd;;AAEA;AACA,IAAMC,cAAc,0BAAsBlD,SAASiC,gBAAT,CAA0B,0BAA1B,CAAtB,CAApB;AACA,IAAMkB,SAAS,qBAAiBnD,SAASiC,gBAAT,CAA0B,QAA1B,CAAjB,CAAf;AACA,IAAMmB,eAAe,oBAAgBpD,SAASiC,gBAAT,CAA0B,uBAA1B,CAAhB,CAArB;AACA,IAAMoB,YAAY,wBAAoBrD,SAASiC,gBAAT,CAA0B,wBAA1B,CAApB,CAAlB;AACA,IAAMqB,SAAS,qBAAiBtD,SAASiC,gBAAT,CAA0B,qBAA1B,CAAjB,CAAf,C","file":"trowel.github.io.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 708030de537cc7077c02","class Affix {\n  constructor() {\n    this.contentWrapper = document.getElementById('doc-content');\n\n    if (!this.contentWrapper) return;\n    if (!this.contentWrapper.getAttribute('data-affix')) return;\n\n    this.print();\n    return this.listener();\n  }\n\n  get headings() {\n    return [].slice.call(this.contentWrapper.querySelectorAll('h2'));\n  }\n\n  get anchors() {\n    return [].slice.call(document.querySelectorAll('#affix a'));\n  }\n\n  print() {\n    const nav = document.createElement(\"nav\");\n    nav.classList.add('affix');\n    nav.id = 'affix';\n\n    this.headings.map(heading => {\n      const anchor = document.createElement(\"a\");\n      anchor.innerText = heading.innerText;\n      anchor.setAttribute('data-anchor', heading.id);\n\n      return nav.append(anchor);\n    });\n\n    return this.contentWrapper.before(nav);\n  }\n\n  goTo(event) {\n    const target = document.getElementById(event.target.getAttribute('data-anchor'));\n    const header = document.getElementById('header');\n    const subHeader = document.getElementById('doc-subheader');\n    const scrollTop = target.offsetTop - (header.offsetHeight + subHeader.offsetHeight);\n    return document.body.scrollTop = document.documentElement.scrollTop = scrollTop;\n  }\n\n  listener() {\n    this.anchors.map(anchor => anchor.addEventListener('click', this.goTo.bind(this)));\n  }\n}\n\nexport default Affix;\n\n\n// WEBPACK FOOTER //\n// ./scripts/components/affix.js","class Menus {\n  constructor(elements) {\n    elements.forEach(function(element, index) {\n      let element_obj = new Menu(element);\n    })\n  }\n}\n\nclass Menu {\n  constructor(element) {\n    this.element = element;\n    this.nav = element.querySelector('[data-menu=\"nav\"]');\n    this.navToggle = element.querySelector('[data-menu=\"toggle\"]');\n    this.backdrop = element.querySelector('[data-menu=\"backdrop\"]');\n\n    this.movingDom = [this.nav, this.backdrop];\n    this.triggerDom = [this.navToggle, this.backdrop];\n\n    return this.listener();\n  }\n\n  toggle() {\n    this.movingDom.map(navPart => navPart.classList.toggle('is-in'));\n  }\n\n  listener() {\n    return this.triggerDom.map(navPart => navPart.addEventListener('click', this.toggle.bind(this)));\n  }\n}\n\nexport default Menus;\n\n\n// WEBPACK FOOTER //\n// ./scripts/components/menu.js","export default class TrowelAlerts {\n  constructor(elements) {\n    elements.forEach(function(element, index) {\n      let element_obj = new TrowelAlert(element);\n    })\n  }\n}\n\nclass TrowelAlert {\n  constructor(element) {\n    this.element = element;\n    this.timesCollection = [].slice.call(this.element.querySelectorAll('[data-alert=\"times\"]'));\n    return this.listener();\n  }\n\n  removeAlert() {\n    return this.element.remove();\n  }\n\n  listener() {\n    return this.timesCollection\n      .map(times => times.addEventListener('click', this.removeAlert.bind(this)));\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/trowel-alerts/src/javascript/alerts.js\n// module id = 2\n// module chunks = 0","export default class TrowelBreadcrumbs {\n  constructor(elements) {\n    elements.forEach(function(element, index) {\n      let element_obj = new TrowelBreadcrumb(element);\n    })\n  }\n}\n\nclass TrowelBreadcrumb {\n  constructor(element) {\n    this.element = element;\n    this.toggleTriggers = [].slice.call(this.element.querySelectorAll('[data-breadcrumb=\"toggle\"]'));\n    this.list = this.element.querySelector('[data-breadcrumb=\"list\"]');\n\n    this.events = this.events();\n    this.listener();\n    this.element.dispatchEvent(this.events.mounted);\n    return;\n  }\n\n  isVisible() {\n    return this.list.getAttribute('data-state') === \"visible\";\n  }\n\n  show() {\n    this.element.dispatchEvent(this.events.show);\n    this.list.setAttribute('data-state', 'visible');\n    this.element.dispatchEvent(this.events.shown);\n    return;\n  }\n\n  hide() {\n    this.element.dispatchEvent(this.events.hide);\n    this.list.setAttribute('data-state', 'hidden');\n    this.element.dispatchEvent(this.events.hidden);\n    return;\n  }\n\n  toggle() {\n    this.element.dispatchEvent(this.events.toggle);\n    this.isVisible() ? this.hide() : this.show();\n    this.element.dispatchEvent(this.events.toggled);\n    return;\n  }\n\n  events() {\n    const show = new Event('trowel.breadcrumb.show');\n    const shown = new Event('trowel.breadcrumb.shown');\n    const hide = new Event('trowel.breadcrumb.hide');\n    const hidden = new Event('trowel.breadcrumb.hidden');\n    const toggle = new Event('trowel.breadcrumb.toggle');\n    const toggled = new Event('trowel.breadcrumb.toggled');\n    const mounted = new Event('trowel.breadcrumb.mounted');\n\n    return { show, shown, hide, hidden, toggle, toggled, mounted };\n  }\n\n\n  listener() {\n    return this.toggleTriggers\n      .map(toggleTrigger => toggleTrigger.addEventListener('click', this.toggle.bind(this)));\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/trowel-breadcrumbs/src/javascript/breadcrumbs.js\n// module id = 3\n// module chunks = 0","export default class TrowelCollapses {\n  constructor(elements) {\n    elements.forEach(function(element, index) {\n      let element_obj = new TrowelCollapse(element);\n    })\n  }\n}\n\nclass TrowelCollapse {\n  constructor(collapse, nested = true) {\n    this.collapse = collapse;\n    this.nested = nested;\n\n    this.isVisible ? this.show() : this.hide();\n\n    this.listener();\n    this.collapse.dispatchEvent(this.events.mounted);\n    return;\n  }\n\n  show() {\n    this.collapse.dispatchEvent(this.events.show);\n    this.collapse.setAttribute('data-state', 'visible');\n    this.triggers.map(trigger => trigger.addActiveclass());\n    this.otherCollapsesFromGroup.forEach(collapse => collapse.hide());\n    this.collapse.dispatchEvent(this.events.shown);\n    return;\n  }\n\n  hide() {\n    this.collapse.dispatchEvent(this.events.hide);\n    this.collapse.setAttribute('data-state', 'hidden');\n    this.triggers.map(trigger => trigger.removeActiveclass());\n    this.collapse.dispatchEvent(this.events.hidden);\n    return;\n  }\n\n  toggle() {\n    this.collapse.dispatchEvent(this.events.toggle);\n\n    if (this.isVisible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n\n    this.collapse.dispatchEvent(this.events.toggled);\n    return;\n  }\n\n  get isVisible () {\n    return this.collapse.getAttribute('data-state') == 'visible';\n  }\n\n  get groupName () {\n    return this.collapse.getAttribute('data-group');\n  }\n\n  get isEffectingOtherCollapsesFromGroup () {\n    return this.groupName && this.nested;\n  }\n\n  get otherCollapsesFromGroup () {\n    if (!this.isEffectingOtherCollapsesFromGroup) return [];\n    const groupList = document.querySelectorAll(`[data-group=\"${this.groupName}\"]`);\n\n    return [].slice.call(groupList) // convert the nodelist as array\n      .filter(collapse => collapse != this.collapse) // exclude `this` from the arr\n      .map(collapse => new TrowelCollapse(collapse, false))\n  }\n\n  listener() {\n    if (!this.nested) return false;\n\n    this.toggleTriggers\n      .map(trigger => trigger.domEl.addEventListener('click', this.toggle.bind(this)));\n\n    this.showTriggers\n      .map(trigger => trigger.domEl.addEventListener('click', this.show.bind(this)));\n\n    this.hideTriggers\n      .map(trigger => trigger.domEl.addEventListener('click', this.hide.bind(this)));\n  }\n\n  get triggers () {\n    const triggerDomList = document.querySelectorAll(`[data-collapse][data-href=\"#${this.collapse.id}\"]`);\n\n    return Array.prototype.slice.call(triggerDomList) // convert the nodelist as array\n      .map(trigger => new TrowelCollapseTrigger(trigger));\n  }\n\n  get toggleTriggers () {\n    return this.triggers\n      .filter(trigger => trigger.isToggleAction);\n  }\n\n  get showTriggers () {\n    return this.triggers\n      .filter(trigger => trigger.isShowAction);\n  }\n\n  get hideTriggers () {\n    return this.triggers\n      .filter(trigger => trigger.isHideAction);\n  }\n\n  get events() {\n    const show = new Event('trowel.collapse.show');\n    const shown = new Event('trowel.collapse.shown');\n    const hide = new Event('trowel.collapse.hide');\n    const hidden = new Event('trowel.collapse.hidden');\n    const toggle = new Event('trowel.collapse.toggle');\n    const toggled = new Event('trowel.collapse.toggled');\n    const mounted = new Event('trowel.collapse.mounted');\n\n    return { show, shown, hide, hidden, toggle, toggled, mounted };\n  }\n}\n\n\nclass TrowelCollapseTrigger {\n  constructor(domEl) {\n    this.domEl = domEl;\n\n    this.domEl.dispatchEvent(this.events.mounted);\n    return;\n  }\n\n  get activeclass () {\n    return this.domEl.getAttribute('data-activeclass');\n  }\n\n  get action () {\n    return this.domEl.getAttribute('data-collapse');\n  }\n\n  get isToggleAction () {\n    return this.action == 'toggle';\n  }\n\n  get isShowAction () {\n    return this.action == 'show';\n  }\n\n  get isHideAction () {\n    return this.action == 'hide';\n  }\n\n  addActiveclass() {\n    this.domEl.dispatchEvent(this.events.activate);\n    this.domEl.classList.add(this.activeclass);\n    this.domEl.dispatchEvent(this.events.activated);\n    return;\n  }\n\n  removeActiveclass() {\n    this.domEl.dispatchEvent(this.events.desactivate);\n    this.domEl.classList.remove(this.activeclass);\n    this.domEl.dispatchEvent(this.events.desactivated);\n    return;\n  }\n\n  toggleActiveclass() {\n    this.domEl.dispatchEvent(this.events.toggle);\n    this.domEl.classList.toggle(this.activeclass);\n    this.domEl.dispatchEvent(this.events.toggled);\n    return;\n  }\n\n  get events() {\n    const activate = new Event('trowel.collapse.trigger.activate');\n    const activated = new Event('trowel.collapse.trigger.activated');\n    const desactivate = new Event('trowel.collapse.desactivate.hide');\n    const desactivated = new Event('trowel.collapse.desactivated.hidden');\n    const toggle = new Event('trowel.collapse.trigger.toggle');\n    const toggled = new Event('trowel.collapse.trigger.toggled');\n    const mounted = new Event('trowel.collapse.trigger.mounted');\n\n    return { activate, activated, desactivate, desactivated, toggle, toggled, mounted };\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/trowel-collapses/src/javascript/collapses.js\n// module id = 4\n// module chunks = 0","export default class TrowelDrops {\n  constructor(triggers) {\n    triggers.forEach(function(trigger, index) {\n      let trigger_obj = new TrowelDrop(trigger);\n    })\n  }\n}\n\nclass TrowelDrop {\n  constructor(trigger, customOptions = {}) {\n    if (window.Tether === undefined) throw new Error('Trowel Drops require Tether (http://tether.io/)')\n\n    this.trigger = trigger;\n    this.drop = document.querySelector(this.trigger.getAttribute('data-href'));\n    this.options = customOptions;\n    this.tether = new Tether(this.tetherOptions);\n\n    this.events = this.events();\n\n    this.options.visible ? this.show() : this.hide();\n    this.setGutterPositions();\n\n    this.listener();\n    this.drop.dispatchEvent(this.events.mounted);\n    return;\n  }\n\n  set options(customOptions) {\n    const defaultOptions = {\n      visible: false,\n      behavior: 'click',\n      position: 'bottomout leftin',\n    };\n\n    const options = Object.keys(defaultOptions).reduce((options, option) => {\n      options[option] = defaultOptions[option];\n\n      // 1st priority : data-options\n      if (this.trigger.getAttribute(`data-${option}`)) {\n        options[option] = this.trigger.getAttribute(`data-${option}`);\n\n        // make sure the option is a bool and not a string\n        if (option == 'visible') {\n          options[option] = options[option] == \"true\";\n        }\n\n      // 2nd priority : customOptions\n      } else if (customOptions[option]) {\n        options[option] = customOptions[option];\n      }\n\n      return options;\n    }, {});\n\n    const { posY, posX } = this.getPositions(options);\n\n    if (!['click', 'hover'].includes(options.behavior)) {\n      throw new Error('Trowel drops behavior option must be \\'click\\' or \\'hover\\'')\n    }\n\n    if (options.position.split(' ').length != 2) {\n      throw new Error('Trowel drops position option must be a string within two words describing Y (\\'top\\', \\'middle\\' or \\'bottom\\') and X (\\'left\\', \\'center\\' or \\'right\\') position')\n    }\n\n    if (!['topin', 'topout', 'middle', 'bottomin', 'bottomout'].includes(posY)) {\n      throw new Error('Trowel drops position option first word must be \\'topin\\', \\'topout\\', \\'middle\\', \\'bottomin\\' or \\'bottomout\\'')\n    }\n\n    if (!['leftin', 'leftout', 'center', 'rightin', 'rightout'].includes(posX)) {\n      throw new Error('Trowel drops position option second word must be \\'leftin\\', \\'leftout\\', \\'center\\', \\'rightin\\' or \\'rightout\\'')\n    }\n\n    return this._options = options;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  getPositions(options = this.options) {\n    return {\n      options: options,\n      posY: options.position.split(' ')[0],\n      posX: options.position.split(' ')[1],\n    }\n  }\n\n  get tetherOptions() {\n    const { posY, posX } = this.getPositions();\n    let attachmentX, attachmentY, targetAttachmentX, targetAttachmentY, gutterX, gutterY;\n\n    switch (posY) {\n      case 'topout':\n        attachmentY = 'bottom';\n        targetAttachmentY = 'top';\n        break;\n      case 'topin':\n        attachmentY = 'top';\n        targetAttachmentY = 'top';\n        break;\n      case 'bottomin':\n        attachmentY = 'bottom';\n        targetAttachmentY = 'bottom';\n        break;\n      case 'bottomout':\n        attachmentY = 'top';\n        targetAttachmentY = 'bottom';\n        break;\n      default:\n        attachmentY = 'center';\n        targetAttachmentY = 'center';\n    }\n\n    switch (posX) {\n      case 'leftout':\n        attachmentX = 'right';\n        targetAttachmentX = 'left';\n        break;\n      case 'leftin':\n        attachmentX = 'left';\n        targetAttachmentX = 'left';\n        break;\n      case 'rightin':\n        attachmentX = 'right';\n        targetAttachmentX = 'right';\n        break;\n      case 'rightout':\n        attachmentX = 'left';\n        targetAttachmentX = 'right';\n        break;\n      default:\n        attachmentX = 'center';\n        targetAttachmentX = 'center';\n    }\n\n    let config = {\n      element: this.drop,\n      target: this.trigger,\n      attachment: `${attachmentY} ${attachmentX}`,\n      targetAttachment: `${targetAttachmentY} ${targetAttachmentX}`,\n    };\n\n\n    return config;\n  }\n\n  setGutterPositions() {\n    const { posY, posX } = this.getPositions();\n    let gutterY, gutterX;\n\n    switch (posY) {\n      case 'topout':\n        gutterY = 'bottom';\n        break;\n      case 'bottomout':\n        gutterY = 'top';\n        break;\n      default:\n        gutterY = 'none';\n    }\n\n    switch (posX) {\n      case 'leftout':\n        gutterX = 'right';\n        break;\n      case 'rightout':\n        gutterX = 'left';\n        break;\n      default:\n        gutterX = 'none';\n    }\n\n    this.drop.setAttribute('data-gutter', `${gutterY} ${gutterX}`)\n  }\n\n  get isVisible() {\n    return this.drop.style.display == 'block';\n  }\n\n  show() {\n    this.drop.dispatchEvent(this.events.show);\n    this.drop.style.display = 'block';\n    this.drop.dispatchEvent(this.events.shown);\n    return;\n  }\n\n  hide() {\n    this.drop.dispatchEvent(this.events.hide);\n    this.drop.style.display = 'none';\n    this.drop.dispatchEvent(this.events.hidden);\n    return;\n  }\n\n  toggle() {\n    this.drop.dispatchEvent(this.events.toggle);\n    this.isVisible ? this.hide() : this.show();\n    this.drop.dispatchEvent(this.events.toggled);\n    return;\n  }\n\n  listener() {\n    if (this.options.behavior == 'click') {\n      this.trigger.addEventListener('click', this.toggle.bind(this));\n\n      // hide the drop when you click outside\n      document.addEventListener('click', function(event) {\n        const isClickInside = this.trigger.contains(event.target) || this.drop.contains(event.target);\n        if (!isClickInside && this.isVisible) this.hide();\n        return;\n      }.bind(this))\n\n    } else if (this.options.behavior == 'hover') {\n      this.trigger.addEventListener('mouseenter', this.show.bind(this));\n\n      [this.trigger, this.drop].map(element => {\n        element.addEventListener('mouseout', function(event) {\n          const hovering = this.trigger.contains(event.toElement) || this.drop.contains(event.toElement);\n          if (!hovering) this.hide();\n          return;\n        }.bind(this));\n      })\n    }\n  }\n\n  events() {\n    const show = new Event('trowel.drop.show');\n    const shown = new Event('trowel.drop.shown');\n    const hide = new Event('trowel.drop.hide');\n    const hidden = new Event('trowel.drop.hidden');\n    const toggle = new Event('trowel.drop.toggle');\n    const toggled = new Event('trowel.drop.toggled');\n    const mounted = new Event('trowel.drop.mounted');\n\n    return { show, shown, hide, hidden, toggle, toggled, mounted };\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/trowel-drops/src/javascript/drops.js\n// module id = 5\n// module chunks = 0","export default class TrowelModals {\n  constructor(elements) {\n    elements.forEach(function(element, index) {\n      let element_obj = new TrowelModal(element);\n    })\n  }\n}\n\nclass TrowelModal {\n  constructor(element) {\n    this.element = element;\n    this.dialog = this.element.children[0];\n    this.rootNodes = [this.element, this.dialog];\n\n    this.hideTriggers = [].slice.call(this.element.querySelectorAll('[data-modal=\"hide\"]'));\n    this.showTriggers = [].slice.call(document.querySelectorAll(`[data-modal=\"open\"][data-target=\"#${this.element.id}\"]`));\n\n    this.events = this.events();\n    this.listener();\n    this.element.dispatchEvent(this.events.mounted);\n    return;\n  }\n\n  isVisible() {\n    return this.element.getAttribute('data-modal') === 'visible';\n  }\n\n  show() {\n    this.element.dispatchEvent(this.events.show);\n    this.rootNodes.map(node => node.setAttribute('data-modal', 'visible'));\n    this.element.dispatchEvent(this.events.shown);\n    return;\n  }\n\n  hide() {\n    this.element.dispatchEvent(this.events.hide);\n    this.rootNodes.map(node => node.setAttribute('data-modal', 'invisible'));\n    this.element.dispatchEvent(this.events.hidden);\n    return;\n  }\n\n  toggle() {\n    this.element.dispatchEvent(this.events.toggle);\n    this.isVisible() ? this.hide() : this.show();\n    this.element.dispatchEvent(this.events.toggled);\n    return;\n  }\n\n  backdropClose(event) {\n    // make sure the click event is on the modal and not dom children element\n    if (event.currentTarget === event.target) this.hide();\n\n    return;\n  }\n\n  events() {\n    const show = new Event('trowel.modal.show');\n    const shown = new Event('trowel.modal.shown');\n    const hide = new Event('trowel.modal.hide');\n    const hidden = new Event('trowel.modal.hidden');\n    const toggle = new Event('trowel.modal.toggle');\n    const toggled = new Event('trowel.modal.toggled');\n    const mounted = new Event('trowel.modal.mounted');\n\n    return { show, shown, hide, hidden, toggle, toggled, mounted };\n  }\n\n  listener() {\n    this.element.addEventListener('click', this.backdropClose.bind(this));\n    this.hideTriggers.map(hideTrigger => hideTrigger.addEventListener('click', this.backdropClose.bind(this)))\n    this.showTriggers.map(showTrigger => showTrigger.addEventListener('click', this.show.bind(this)))\n\n    return;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/trowel-modals/src/javascript/modals.js\n// module id = 6\n// module chunks = 0","import Menus from './components/menu';\nimport Affix from './components/affix';\nimport TrowelBreadcrumbs from '../node_modules/trowel-breadcrumbs/src/javascript/breadcrumbs';\nimport TrowelAlerts from '../node_modules/trowel-alerts/src/javascript/alerts';\nimport TrowelDrops from '../node_modules/trowel-drops/src/javascript/drops';\nimport TrowelCollapses from '../node_modules/trowel-collapses/src/javascript/collapses';\nimport TrowelModals from '../node_modules/trowel-modals/src/javascript/modals';\n\nconst menus = new Menus(document.querySelectorAll('[data-flag=\"menu\"]'));\nconst affix = new Affix();\n\n// Trowel components\nconst breadcrumbs = new TrowelBreadcrumbs(document.querySelectorAll('[data-flag=\"breadcrumb\"]'));\nconst alerts = new TrowelAlerts(document.querySelectorAll('.alert'));\nconst dropsTrigger = new TrowelDrops(document.querySelectorAll('[data-drop=\"trigger\"]'));\nconst collapses = new TrowelCollapses(document.querySelectorAll('[data-flag=\"collapse\"]'));\nconst modals = new TrowelModals(document.querySelectorAll('[data-flag=\"modal\"]'));\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/main.js"],"sourceRoot":""}